{"_id":"parquetjs","_rev":"15-72d5d480bb63c98a35dd4b62c9b5ab3d","name":"parquetjs","description":"fully asynchronous, pure JavaScript implementation of the Parquet file format","dist-tags":{"latest":"0.11.2"},"versions":{"0.2.0":{"name":"parquetjs","description":"Read and write parquet files from node.js","main":"parquet.js","version":"0.2.0","homepage":"https://github.com/ironsource/parquetjs","author":{"name":"The ParquetJS Authors","email":"parquet-js-authors@ironsrc.com"},"license":"MIT","keywords":["dremel","parquet"],"repository":{"type":"git","url":"git://github.com/ironsource/parquetjs.git"},"dependencies":{"brotli":"^1.3.0","bson":"^1.0.4","int53":"^0.2.4","lzo":"^0.4.0","snappyjs":"^0.6.0","thrift":"^0.10.0","varint":"^5.0.0"},"devDependencies":{"chai":"^4.1.1","mocha":"^3.5.3"},"scripts":{"test":"mocha"},"engines":{"node":">=7.6"},"gitHead":"99bbf92365a5ab2516e115487ffe6e53c13648e6","bugs":{"url":"https://github.com/ironsource/parquetjs/issues"},"_id":"parquetjs@0.2.0","_shasum":"3a6c39754bc8e1b6afbb8b19d367965c37b6625e","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.10.0","_npmUser":{"name":"ironsource","email":"npm@ironsrc.com"},"dist":{"shasum":"3a6c39754bc8e1b6afbb8b19d367965c37b6625e","tarball":"https://registry.npmjs.org/parquetjs/-/parquetjs-0.2.0.tgz","integrity":"sha512-OlFB8kQ5afs2UpcIcJ8VPn+CMM0cYXCwrLl6/bMx8MHrxwxfN3I8ZLGg0TtF2xE7WxMpTiFn7Gnxf67VsR3d2Q==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDo+JFWI/RKFUYtwnB/KZF04up4TQrJmkikmExDgmJajgIhAKPoPoXLjFQIU41I70Th40lSRoGzzJfVP+6aE3n5f9+l"}]},"maintainers":[{"name":"ironsource","email":"npm@ironsrc.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/parquetjs-0.2.0.tgz_1508256381738_0.04938505287282169"},"directories":{}},"0.7.0":{"name":"parquetjs","description":"fully asynchronous, pure JavaScript implementation of the Parquet file format","main":"parquet.js","version":"0.7.0","homepage":"https://github.com/ironSource/parquetjs","author":{"name":"ironSource","email":"npm@ironsrc.com"},"license":"MIT","keywords":["dremel","parquet"],"repository":{"type":"git","url":"git://github.com/ironSource/parquetjs.git"},"dependencies":{"brotli":"^1.3.0","bson":"^1.0.4","int53":"^0.2.4","lzo":"^0.4.0","snappyjs":"^0.6.0","thrift":"^0.10.0","varint":"^5.0.0"},"devDependencies":{"chai":"^4.1.2","mocha":"^3.5.3"},"scripts":{"test":"mocha"},"engines":{"node":">=7.6"},"gitHead":"7d4c500ce2a2b1525ff0ca12ce6321aebc995157","bugs":{"url":"https://github.com/ironSource/parquetjs/issues"},"_id":"parquetjs@0.7.0","_shasum":"045d7f018215257007ac04f52e95ee8c5cf133f0","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.10.0","_npmUser":{"name":"ironsource","email":"npm@ironsrc.com"},"dist":{"shasum":"045d7f018215257007ac04f52e95ee8c5cf133f0","tarball":"https://registry.npmjs.org/parquetjs/-/parquetjs-0.7.0.tgz","integrity":"sha512-3Euaf+tryiP4luRJ35Mgn7gsTM0NCL8Xg9c/ufrddbJlqvrCT78RuqlW6L/YDTEdi81oyFKiWw+kqDu6+qowew==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGlJlQzOBA/ZcpKaeH8fn2HwPsb6/NLHmYjnZ5o66qeXAiEA/d4xRO8rt3LKhRy8Hxu0YhZTORsJL58AhKEMpdWaFOs="}]},"maintainers":[{"name":"ironsource","email":"npm@ironsrc.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/parquetjs-0.7.0.tgz_1508263590402_0.6350364931859076"},"directories":{}},"0.10.0":{"name":"parquetjs","description":"fully asynchronous, pure JavaScript implementation of the Parquet file format","main":"parquet.js","version":"0.10.0","homepage":"https://github.com/ironSource/parquetjs","author":{"name":"ironSource","email":"npm@ironsrc.com"},"license":"MIT","keywords":["dremel","parquet"],"repository":{"type":"git","url":"git://github.com/ironSource/parquetjs.git"},"dependencies":{"brotli":"^1.3.0","bson":"^1.0.4","int53":"^0.2.4","lzo":"^0.4.0","object-stream":"0.0.1","snappyjs":"^0.6.0","thrift":"^0.11.0","varint":"^5.0.0"},"devDependencies":{"chai":"^4.1.2","mocha":"^5.2.0"},"scripts":{"test":"mocha"},"engines":{"node":">=7.6"},"gitHead":"ab95ea6e5ec68367ea1b9f6fea6754255d51b7a3","bugs":{"url":"https://github.com/ironSource/parquetjs/issues"},"_id":"parquetjs@0.10.0","_npmVersion":"5.6.0","_nodeVersion":"8.11.1","_npmUser":{"name":"kessler","email":"yanivk@gmail.com"},"dist":{"integrity":"sha512-oVEKFfMKg9D84yc6osevA7LlzpomjLnzcVbwqWVcf6C0AdKVkb6Jxe/dFPdBf7QUj/OikI6Bu9mGA5re1tH4lA==","shasum":"189a1e4b2d958bf982a360504e393fa80a49ef3b","tarball":"https://registry.npmjs.org/parquetjs/-/parquetjs-0.10.0.tgz","fileCount":28,"unpackedSize":218204,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb21v0CRA9TVsSAnZWagAAPeAP/2WBrLVGZUHJifEjjSwb\nmfzSIqPlv4w5UPq+IervQAgeGYjEWMiJadwE1N3gM/+mD6vTxCbvkKUd0p0/\nmSFoJgvcaRtmWdVDcOApRox2vH/YUoWdnpRFYN/nLqASaevuQidlB7Zt7MA6\ncoTLDMprVG1nVMnetLecWWgDQMNPLeBA2TTChxWmSF0ZiE/vP5WGLzTv4bTz\nnLleMjXOW4s3VqJRUmHVXMh+kqOonfdYQYQ9P791mXkGSMCCXXGxUt54IuPo\nOygd3JJmU8f4IHzPoPIR6ej/QpMhDJomJmGM5eB0HXyKdnc/Mql8CHOweqpC\ni4IjuPdCzKsNE+ilqEOt3psox/2Ewp4J6SzGfbLlAnUN2DYyqIvZVEWhE+YG\nGPZirbv5EP6B9fAkcbdaDeN/VzuQ0JcXUjap2qVDObOQ4ownGeRx2GBJXtrO\nmbujq5JEQorh7zkkn6z+VBj8x4iKHzwiwGhrhz7zJJTf6Zy77BB4ffFTlTq7\n607Ebdqv/MQtW16+0C0VWzLN9HwdOw1pSHB8i+bPL+l/kbwSUbUESfz29egd\ni6fHYpY7aYUTTOzB7yMf/8T1ni9if8dz3k0RHw14Ml0XS/qakrg9q46lGG/W\nEeT424aZvcERAv2fePWFetqAicA9xIi46N1qKD10hurtLJDOaNkl0ctWSYEc\nTK5H\r\n=McGE\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIA1ai+DF5dViC25Z6eRTb6b4jX4OlM7ow4Y5jzFZ3IcuAiEAgvlrDTpBTfObNR7/oLNz6JTrBSrg88/Yx70A5qWYTY0="}]},"maintainers":[{"email":"npm@ironsrc.com","name":"ironsource"},{"email":"yanivk@gmail.com","name":"kessler"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/parquetjs_0.10.0_1541102579723_0.5697949236289059"},"_hasShrinkwrap":false},"0.10.1":{"name":"parquetjs","description":"fully asynchronous, pure JavaScript implementation of the Parquet file format","main":"parquet.js","version":"0.10.1","homepage":"https://github.com/ironSource/parquetjs","author":{"name":"ironSource","email":"npm@ironsrc.com"},"license":"MIT","keywords":["dremel","parquet"],"repository":{"type":"git","url":"git://github.com/ironSource/parquetjs.git"},"dependencies":{"brotli":"^1.3.0","bson":"^1.0.4","int53":"^0.2.4","lzo":"^0.4.0","object-stream":"0.0.1","snappyjs":"^0.6.0","thrift":"^0.11.0","varint":"^5.0.0"},"devDependencies":{"chai":"^4.1.2","mocha":"^5.2.0"},"scripts":{"test":"mocha"},"engines":{"node":">=7.6"},"gitHead":"cb63ce300b32d0441e16037fa4a786d491bee6a9","bugs":{"url":"https://github.com/ironSource/parquetjs/issues"},"_id":"parquetjs@0.10.1","_npmVersion":"6.5.0","_nodeVersion":"11.6.0","_npmUser":{"name":"kessler","email":"yanivk@gmail.com"},"dist":{"integrity":"sha512-OIc3Kots46iWZOFANSRR4kXrM9lSGhIoKpQxIjM+DpMKqEQ9thZDgsZVPGkkfTVYTKypS9XGKOTZIufWDrxfSA==","shasum":"e64f18499aba92ae64601160cc993872aefc80fa","tarball":"https://registry.npmjs.org/parquetjs/-/parquetjs-0.10.1.tgz","fileCount":28,"unpackedSize":219100,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcPxoDCRA9TVsSAnZWagAAlIAP/3OrFw2LnrdYavzCMsC/\n8d4JOdfh0aphK9QUO0v28oguoWRCc7Cyw3+S8q5FSv2r9sIjDiHX6NSTt+Mt\ny1ePuTqxeykHs3UqIogT/M5sLfkbysyfUGYnMeOwxrPn3s0qIrW9O6465jXF\noGMCpJzQe7gYhLsOqH7Om4TzFuDLKY8rS60lcC4vsLi228JKR2HNdL2TA/xD\ncvtKnU+n1OnImXFVcq0CetbHKnaHvKZCwa1WW00WCslxsQVa0Z81HGt2kUrp\nIXUuLFIuM3OxPDnNN1+wzrljpV7Uvl5ouDtbGQyXe9OaQOUQUgls5d69jnOk\nzhEoDOHuJAnVvrCTtQsrawZjvLlI/3QMG9V6VK8WRi2+XKvvWU/EA1uk57Tt\nxXLzp2lc3sgWqN7r+CLTzT8YXdUaLhWEKtyrmP3DNhfEeF/J27h5re1wiJpN\nTKpxtDUFTw65qdaj4YljcnPtj53U8r1rlTxd0Lc2gMkuYGCLHWIqCwjPH/uM\nH//WwbG1mQSt7Qs6F0Zm/jJ0NLG4Kl7k5KzCODE/yK8jMngaRjf6HSzFmTPk\nWMzaKqToFS+Xcs6+G/KBPSn4QkTzPh+JHORAJaI0dYY1J+8bCZeLjKz6llId\nfp3BbyPKAoEE5rZWSA5UtXQeedvV2cE8UiVUnpycr1A5MDOFgUvOmMutIyPR\nkmFH\r\n=ubEP\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDMxQHGhpV3iJnzsdDLtmCklNRKWT5QS5/b0gsiQnk2HAIgTxmu0qymXJKWrHzEMHen+7jC8vmi6Dzk6iKhF1gOcMY="}]},"maintainers":[{"email":"npm@ironsrc.com","name":"ironsource"},{"email":"yanivk@gmail.com","name":"kessler"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/parquetjs_0.10.1_1547639299181_0.017705915983418086"},"_hasShrinkwrap":false},"0.11.0":{"name":"parquetjs","description":"fully asynchronous, pure JavaScript implementation of the Parquet file format","main":"parquet.js","version":"0.11.0","homepage":"https://github.com/ironSource/parquetjs","author":{"name":"ironSource","email":"npm@ironsrc.com"},"license":"MIT","keywords":["dremel","parquet"],"repository":{"type":"git","url":"git://github.com/ironSource/parquetjs.git"},"dependencies":{"brotli":"^1.3.0","bson":"^1.0.4","int53":"^0.2.4","object-stream":"0.0.1","snappyjs":"^0.6.0","thrift":"^0.11.0","varint":"^5.0.0","lzo":"^0.4.0"},"optionalDependencies":{"lzo":"^0.4.0"},"devDependencies":{"chai":"^4.1.2","mocha":"^5.2.0"},"scripts":{"test":"mocha"},"engines":{"node":">=7.6"},"gitHead":"01245efddb3ab823121fbd63b5ee0e0890688b7a","bugs":{"url":"https://github.com/ironSource/parquetjs/issues"},"_id":"parquetjs@0.11.0","_nodeVersion":"12.9.1","_npmVersion":"6.10.2","_npmUser":{"name":"kessler","email":"yanivk@gmail.com"},"dist":{"integrity":"sha512-cO0b+TMPjMC6jyHH31Le1gWaGOkksxvolVJ/PesFaNUoLa1NDVA8igZHmAC+xY/7kC41WkO7ktpbOaFXeAw2aA==","shasum":"d215224440ed0a52861a52c7092fd5d5c931387d","tarball":"https://registry.npmjs.org/parquetjs/-/parquetjs-0.11.0.tgz","fileCount":28,"unpackedSize":219271,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdlJlKCRA9TVsSAnZWagAAGngP/1Wf82Fqq3WWJkseDLtk\n3u6c2Pmo6qB4mORNVkP8aIqkJ3gvTvtu3U3GMrB2fN8VVIU6dqrZDzBl9S42\nRIvX3C0URgS6irnJi4BA7ow0BaysEpzYhnCk3irLcYKYsiH8NErP0SGw8H2j\nPx6bORYG90B14LUSaZ61OaiDwZpRkhjRAmi1eEKz27ZY3EVn7g/Ee/Aw+znw\n+CPcowHCKgbPWtV3P7Dz4GHv7BzOUVaQ+0uNYmxSqPYUCUWa7USJexi229Oo\nLOjxtcmfuZtv07E5M5IZRkYeP0UWK5fZYcpD+Za4R4y5efpkcUyWciDs/lUA\nCJNHfIZDRwdW1xCeHaZqPg1KCQp1CevzL23RyDkFaGMN0k2HaCQJOk3e6dEC\n0tG96LwByKmGs2JMF/tWN+rcQh88K41/l/E49uT0S9J51j17TDSJxFrLtxvi\nQ2uVk3aXZ0ANmvigtevKcaqNrZlVomz93CK0dHe5e1xt3JF4cNdI8aCxNkDk\nJB5iIKJGDBFZ2wPhiz39fVuDNBCEQe9Rfb8E+k6piQKC2muaOoJYczHz8kgf\nOX+hDn/E5tCnsYWcNCMtDXaz7m/qari9Xm3wIRfamCcbTMUNc9afUTdH3DSF\nXl+PorNfHkGp6V9zau6/m2rhIiYQ2r1guiDJOZR4Ra9WXls0yiBjh9YsWS0p\nR0OZ\r\n=8o1U\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD8f4OsFEjkgwzbu0cueIKtsvxgcVQeE7GFXsS+O9si6wIgfSS+RAhtJUc0O18FHLYhmDcm5ljcJbCIZ6fgLjl+UCk="}]},"maintainers":[{"email":"npm@ironsrc.com","name":"ironsource"},{"email":"yanivk@gmail.com","name":"kessler"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/parquetjs_0.11.0_1570019657719_0.48652130015943373"},"_hasShrinkwrap":false},"0.11.1":{"name":"parquetjs","description":"fully asynchronous, pure JavaScript implementation of the Parquet file format","main":"parquet.js","version":"0.11.1","homepage":"https://github.com/ironSource/parquetjs","author":{"name":"ironSource","email":"npm@ironsrc.com"},"license":"MIT","keywords":["dremel","parquet"],"repository":{"type":"git","url":"git://github.com/ironSource/parquetjs.git"},"dependencies":{"brotli":"^1.3.0","bson":"^1.0.4","int53":"^0.2.4","object-stream":"0.0.1","snappyjs":"^0.6.0","thrift":"^0.11.0","varint":"^5.0.0","lzo":"^0.4.0"},"optionalDependencies":{"lzo":"^0.4.0"},"devDependencies":{"chai":"^4.1.2","mocha":"^5.2.0"},"scripts":{"test":"mocha"},"engines":{"node":">=7.6"},"gitHead":"6964bb335955ec422fe3cfee787a24927c07315d","bugs":{"url":"https://github.com/ironSource/parquetjs/issues"},"_id":"parquetjs@0.11.1","_nodeVersion":"12.9.1","_npmVersion":"6.10.2","_npmUser":{"name":"kessler","email":"yanivk@gmail.com"},"dist":{"integrity":"sha512-KWBo6WYiN0D/CbmzadrMg09moqTIZ0qlu7Ucysnf0GrCv20Mgz7PAHc5rnN4JWIHVQ8BtPUAqEbAkU/v3Jkoow==","shasum":"98a2ab4349722014e325b781cd4d9c4b9e21a9ae","tarball":"https://registry.npmjs.org/parquetjs/-/parquetjs-0.11.1.tgz","fileCount":28,"unpackedSize":219267,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdlVlOCRA9TVsSAnZWagAA5vUP/0bNbVfonewV8O6fajQm\nrB46gaCxpMM02OYYLErOzRPbpcgH89f6C/cdFVw/823Bn5VUZ8JlPn3G/MbH\ngz9P/6mWIhlIuriLq21oIaLHC9aq1D/i1OwZ+37yupZ1HS4k9NNJjhS4UO4O\nZfwDS9oP6iaffumWk8uA+9rAL2Cs59YV9qwtOAZZ+oHQbWrSUAEL9JLY3Ai/\n/piU35sxGBr20TkHrVv7iI0UpcFGyipP9ZjCzqG1USeTDmjiYdMemjVhEEBi\nv3Q79/eJZeXRWy59jcDFt9PWQ1bvm8Au7aNKzBsIbs3XpyX0CcHs8X/NjNSm\nNrak2j8Xqhj9gPzSlTx9aWDgUVfNBcFPKvHi4QQ5A+IgpjZNGwv2BUjCYiz7\n4Mqt2vxIVNKOpl4rwY/q4pv377Px/WeS5blk0L7B89Nl327x6ejQC++zXRIk\n/wPpi9K6xtzVFNqF/Eq+t4rQ0iLsSTH0FD0f27b8FU49LK2tjsiOblgb7zIV\nZIn394uG2UNhITPZXiEn4wC4AmL5SrIHLybHPhX5Oey+otx3EuRbdSYt9v+L\ndS2LWwwIqjXA/ZW4TeQjpaUsaG7juC4gKU5IpMCka2DN64EkfBApYcwUidfk\n8tQU+LqxFyR79M3IxugIEKrkfHWptYLYl6XxbPtFEm6G76HzOzE4CmUGsjPA\nnSe5\r\n=qHFK\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCqhOTtXUhOjhhWvCzdKNvZPcOquACjfPyMOQkoRh3qcAIhAJ9GSNfMsJTdaAa2rf4c8x167Oovf2Uh9CwPVgQq2/MK"}]},"maintainers":[{"email":"npm@ironsrc.com","name":"ironsource"},{"email":"yanivk@gmail.com","name":"kessler"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/parquetjs_0.11.1_1570068814095_0.6045249248212041"},"_hasShrinkwrap":false},"0.11.2":{"name":"parquetjs","description":"fully asynchronous, pure JavaScript implementation of the Parquet file format","main":"parquet.js","version":"0.11.2","homepage":"https://github.com/ironSource/parquetjs","author":{"name":"ironSource","email":"npm@ironsrc.com"},"license":"MIT","keywords":["dremel","parquet"],"repository":{"type":"git","url":"git://github.com/ironSource/parquetjs.git"},"dependencies":{"brotli":"^1.3.0","bson":"^1.0.4","int53":"^0.2.4","object-stream":"0.0.1","snappyjs":"^0.6.0","thrift":"^0.11.0","varint":"^5.0.0","lzo":"^0.4.0"},"optionalDependencies":{"lzo":"^0.4.0"},"devDependencies":{"chai":"^4.1.2","mocha":"^5.2.0"},"scripts":{"test":"mocha"},"engines":{"node":">=7.6"},"gitHead":"6af58b0a8a0cf0f59e0e070f769c01584047f97c","bugs":{"url":"https://github.com/ironSource/parquetjs/issues"},"_id":"parquetjs@0.11.2","_nodeVersion":"12.9.1","_npmVersion":"6.10.2","_npmUser":{"name":"kessler","email":"yanivk@gmail.com"},"dist":{"integrity":"sha512-Y6FOc3Oi2AxY4TzJPz7fhICCR8tQNL3p+2xGQoUAMbmlJBR7+JJmMrwuyMjIpDiM7G8Wj/8oqOH4UDUmu4I5ZA==","shasum":"ea13221b3583cb1277f8b4b879776420f8863660","tarball":"https://registry.npmjs.org/parquetjs/-/parquetjs-0.11.2.tgz","fileCount":28,"unpackedSize":219268,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdlVsgCRA9TVsSAnZWagAAueMP/16bZ+gfRkecfRw0Giwx\n9Oy1D/sNV8dBWQeLLPMqyPn8GyedD4nKlMmXR8o9b4263bLFW5ku7i6KEQGQ\nuTi7sQ6opv5B2RqnQbT5en98kc9cn8c7+5lcXjlKDH2BOBHYkUS4IIKKoyom\n6z/3JchWtpPGrtPk8iCOsnEbPF6tuhOipezsh0V1y6hGQMiQasVHZjQIQtzU\nd1X2Nj7Hd7lJ6Dkh8jGQWxFzzm8dOuGMoS4oLymfBvoXJTSu/epVL7U+1Axz\nbzvt7wnX6ofcm+b12QctxN1jyWYri6z6n8JTiLR6yalQzXPcxvCTp51UB4OX\nt18gKz7gbd77E2aBTsvNiB90Kl7Ajg82ZIeC4YHU7pGTqwzXfHekpHfxQCQO\nqG/JlSQfiHaf1Usxcpzo0kSYrz0if0b0CFf3I7BRx9f1VWEiEmlBUO3HCNF8\n7bHwHGlSxhoKENbdcEH1mc6WXDt13/GvVUq/UxQ8jTjdT7QFN+VUdGKOMkl/\n56UrU02Jv1Yl9VbMBc5zIUMH/7Fn6QFpvLFrTWrL0HGo5vu5e5QhnwFSS+Y7\nOluzBqNQ6OdrRgn4jbYuRwgmgTJ+sLHQFGWG41AVS0508mbARpfSvyX22Upe\ny3kzInzfSv+udtI3Sf17yzUERyK0TcV6fRCvuwCzg+bPLJqHiS80f6dekh+0\nDz0a\r\n=GXDJ\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCJ1T+0Lj3dA56UqBII2hEUzKgekJpoxMKkU6+8JVFlZgIhAJLw7AT4rB0+HhbAbSJOaGHq/E0fJ507tUQFrCuhcNbM"}]},"maintainers":[{"email":"npm@ironsrc.com","name":"ironsource"},{"email":"yanivk@gmail.com","name":"kessler"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/parquetjs_0.11.2_1570069279785_0.3152887019582229"},"_hasShrinkwrap":false}},"readme":"# parquet.js\n\nfully asynchronous, pure node.js implementation of the Parquet file format\n\n[![Build Status](https://travis-ci.org/ironSource/parquetjs.png?branch=master)](http://travis-ci.org/ironSource/parquetjs)\n[![License: MIT](https://img.shields.io/badge/License-MIT-green.svg)](https://opensource.org/licenses/MIT)\n[![npm version](https://badge.fury.io/js/parquetjs.svg)](https://badge.fury.io/js/parquetjs)\n\nThis package contains a fully asynchronous, pure JavaScript implementation of\nthe [Parquet](https://parquet.apache.org/) file format. The implementation conforms with the\n[Parquet specification](https://github.com/apache/parquet-format) and is tested\nfor compatibility with Apache's Java [reference implementation](https://github.com/apache/parquet-mr).\n\n**What is Parquet?**: Parquet is a column-oriented file format; it allows you to\nwrite a large amount of structured data to a file, compress it and then read parts\nof it back out efficiently. The Parquet format is based on [Google's Dremel paper](https://www.google.co.nz/url?sa=t&rct=j&q=&esrc=s&source=web&cd=2&cad=rja&uact=8&ved=0ahUKEwj_tJelpv3UAhUCm5QKHfJODhUQFggsMAE&url=http%3A%2F%2Fwww.vldb.org%2Fpvldb%2Fvldb2010%2Fpapers%2FR29.pdf&usg=AFQjCNGyMk3_JltVZjMahP6LPmqMzYdCkw).\n\n\nInstallation\n------------\n\nTo use parquet.js with node.js, install it using npm:\n\n```\n  $ npm install parquetjs\n```\n\n_parquet.js requires node.js >= 8_\n\n\nUsage: Writing files\n--------------------\n\nOnce you have installed the parquet.js library, you can import it as a single\nmodule:\n\n``` js\nvar parquet = require('parquetjs');\n```\n\nParquet files have a strict schema, similar to tables in a SQL database. So,\nin order to produce a Parquet file we first need to declare a new schema. Here\nis a simple example that shows how to instantiate a `ParquetSchema` object:\n\n``` js\n// declare a schema for the `fruits` table\nvar schema = new parquet.ParquetSchema({\n  name: { type: 'UTF8' },\n  quantity: { type: 'INT64' },\n  price: { type: 'DOUBLE' },\n  date: { type: 'TIMESTAMP_MILLIS' },\n  in_stock: { type: 'BOOLEAN' }\n});\n```\n\nNote that the Parquet schema supports nesting, so you can store complex, arbitrarily\nnested records into a single row (more on that later) while still maintaining good\ncompression.\n\nOnce we have a schema, we can create a `ParquetWriter` object. The writer will\ntake input rows as JSON objects, convert them to the Parquet format and store\nthem on disk. \n\n``` js\n// create new ParquetWriter that writes to 'fruits.parquet`\nvar writer = await parquet.ParquetWriter.openFile(schema, 'fruits.parquet');\n\n// append a few rows to the file\nawait writer.appendRow({name: 'apples', quantity: 10, price: 2.5, date: new Date(), in_stock: true});\nawait writer.appendRow({name: 'oranges', quantity: 10, price: 2.5, date: new Date(), in_stock: true});\n```\n\nOnce we are finished adding rows to the file, we have to tell the writer object\nto flush the metadata to disk and close the file by calling the `close()` method:\n\n\nUsage: Reading files\n--------------------\n\nA parquet reader allows retrieving the rows from a parquet file in order.\nThe basic usage is to create a reader and then retrieve a cursor/iterator\nwhich allows you to consume row after row until all rows have been read.\n\nYou may open more than one cursor and use them concurrently. All cursors become\ninvalid once close() is called on\nthe reader object.\n\n``` js\n// create new ParquetReader that reads from 'fruits.parquet`\nlet reader = await parquet.ParquetReader.openFile('fruits.parquet');\n\n// create a new cursor\nlet cursor = reader.getCursor();\n\n// read all records from the file and print them\nlet record = null;\nwhile (record = await cursor.next()) {\n  console.log(record);\n}\n```\n\nWhen creating a cursor, you can optionally request that only a subset of the\ncolumns should be read from disk. For example:\n\n``` js\n// create a new cursor that will only return the `name` and `price` columns\nlet cursor = reader.getCursor(['name', 'price']);\n```\n\nIt is important that you call close() after you are finished reading the file to\navoid leaking file descriptors.\n\n``` js\nawait reader.close();\n```\n\nEncodings\n---------\n\nInternally, the Parquet format will store values from each field as consecutive\narrays which can be compressed/encoded using a number of schemes.\n\n#### Plain Encoding (PLAIN)\n\nThe most simple encoding scheme is the PLAIN encoding. It simply stores the\nvalues as they are without any compression. The PLAIN encoding is currently\nthe default for all types except `BOOLEAN`:\n\n``` js\nvar schema = new parquet.ParquetSchema({\n  name: { type: 'UTF8', encoding: 'PLAIN' },\n});\n```\n\n#### Run Length Encoding (RLE)\n\nThe Parquet hybrid run length and bitpacking encoding allows to compress runs\nof numbers very efficiently. Note that the RLE encoding can only be used in\ncombination with the `BOOLEAN`, `INT32` and `INT64` types. The RLE encoding\nrequires an additional `bitWidth` parameter that contains the maximum number of\nbits required to store the largest value of the field.\n\n``` js\nvar schema = new parquet.ParquetSchema({\n  age: { type: 'UINT_32', encoding: 'RLE', bitWidth: 7 },\n});\n```\n\n\nOptional Fields\n---------------\n\nBy default, all fields are required to be present in each row. You can also mark\na field as 'optional' which will let you store rows with that field missing:\n\n``` js\nvar schema = new parquet.ParquetSchema({\n  name: { type: 'UTF8' },\n  quantity: { type: 'INT64', optional: true },\n});\n\nvar writer = await parquet.ParquetWriter.openFile(schema, 'fruits.parquet');\nawait writer.appendRow({name: 'apples', quantity: 10 });\nawait writer.appendRow({name: 'banana' }); // not in stock\n```\n\n\nNested Rows & Arrays\n--------------------\n\nParquet supports nested schemas that allow you to store rows that have a more\ncomplex structure than a simple tuple of scalar values. To declare a schema\nwith a nested field, omit the `type` in the column definition and add a `fields`\nlist instead:\n\nConsider this example, which allows us to store a more advanced \"fruits\" table\nwhere each row contains a name, a list of colours and a list of \"stock\" objects. \n\n``` js\n// advanced fruits table\nvar schema = new parquet.ParquetSchema({\n  name: { type: 'UTF8' },\n  colours: { type: 'UTF8', repeated: true },\n  stock: {\n    repeated: true,\n    fields: {\n      price: { type: 'DOUBLE' },\n      quantity: { type: 'INT64' },\n    }\n  }\n});\n\n// the above schema allows us to store the following rows:\nvar writer = await parquet.ParquetWriter.openFile(schema, 'fruits.parquet');\n\nawait writer.appendRow({\n  name: 'banana',\n  colours: ['yellow'],\n  stock: [\n    { price: 2.45, quantity: 16 },\n    { price: 2.60, quantity: 420 }\n  ]\n});\n\nawait writer.appendRow({\n  name: 'apple',\n  colours: ['red', 'green'],\n  stock: [\n    { price: 1.20, quantity: 42 },\n    { price: 1.30, quantity: 230 }\n  ]\n});\n\nawait writer.close();\n\n// reading nested rows with a list of explicit columns\nlet reader = await parquet.ParquetReader.openFile('fruits.parquet');\n\nlet cursor = reader.getCursor([['name'], ['stock', 'price']]);\nlet record = null;\nwhile (record = await cursor.next()) {\n  console.log(record);\n}\n\nawait reader.close();\n```\n\nIt might not be obvious why one would want to implement or use such a feature when\nthe same can - in  principle - be achieved by serializing the record using JSON\n(or a similar scheme) and then storing it into a UTF8 field:\n\nPutting aside the philosophical discussion on the merits of strict typing,\nknowing about the structure and subtypes of all records (globally) means we do not\nhave to duplicate this metadata (i.e. the field names) for every record. On top\nof that, knowing about the type of a field allows us to compress the remaining\ndata more efficiently.\n\n\nList of Supported Types & Encodings\n-----------------------------------\n\nWe aim to be feature-complete and add new features as they are added to the\nParquet specification; this is the list of currently implemented data types and\nencodings:\n\n<table>\n  <tr><th>Logical Type</th><th>Primitive Type</th><th>Encodings</th></tr>\n  <tr><td>UTF8</td><td>BYTE_ARRAY</td><td>PLAIN</td></tr>\n  <tr><td>JSON</td><td>BYTE_ARRAY</td><td>PLAIN</td></tr>\n  <tr><td>BSON</td><td>BYTE_ARRAY</td><td>PLAIN</td></tr>\n  <tr><td>BYTE_ARRAY</td><td>BYTE_ARRAY</td><td>PLAIN</td></tr>\n  <tr><td>TIME_MILLIS</td><td>INT32</td><td>PLAIN, RLE</td></tr>\n  <tr><td>TIME_MICROS</td><td>INT64</td><td>PLAIN, RLE</td></tr>\n  <tr><td>TIMESTAMP_MILLIS</td><td>INT64</td><td>PLAIN, RLE</td></tr>\n  <tr><td>TIMESTAMP_MICROS</td><td>INT64</td><td>PLAIN, RLE</td></tr>\n  <tr><td>BOOLEAN</td><td>BOOLEAN</td><td>PLAIN, RLE</td></tr>\n  <tr><td>FLOAT</td><td>FLOAT</td><td>PLAIN</td></tr>\n  <tr><td>DOUBLE</td><td>DOUBLE</td><td>PLAIN</td></tr>\n  <tr><td>INT32</td><td>INT32</td><td>PLAIN, RLE</td></tr>\n  <tr><td>INT64</td><td>INT64</td><td>PLAIN, RLE</td></tr>\n  <tr><td>INT96</td><td>INT96</td><td>PLAIN</td></tr>\n  <tr><td>INT_8</td><td>INT32</td><td>PLAIN, RLE</td></tr>\n  <tr><td>INT_16</td><td>INT32</td><td>PLAIN, RLE</td></tr>\n  <tr><td>INT_32</td><td>INT32</td><td>PLAIN, RLE</td></tr>\n  <tr><td>INT_64</td><td>INT64</td><td>PLAIN, RLE</td></tr>\n  <tr><td>UINT_8</td><td>INT32</td><td>PLAIN, RLE</td></tr>\n  <tr><td>UINT_16</td><td>INT32</td><td>PLAIN, RLE</td></tr>\n  <tr><td>UINT_32</td><td>INT32</td><td>PLAIN, RLE</td></tr>\n  <tr><td>UINT_64</td><td>INT64</td><td>PLAIN, RLE</td></tr>\n</table>\n\n\nBuffering & Row Group Size\n--------------------------\n\nWhen writing a Parquet file, the `ParquetWriter` will buffer rows in memory\nuntil a row group is complete (or `close()` is called) and then write out the row\ngroup to disk.\n\nThe size of a row group is configurable by the user and controls the maximum\nnumber of rows that are buffered in memory at any given time as well as the number\nof rows that are co-located on disk:\n\n``` js\nvar writer = await parquet.ParquetWriter.openFile(schema, 'fruits.parquet');\nwriter.setRowGroupSize(8192);\n```\n\n\nDepdendencies\n-------------\n\nParquet uses [thrift](https://thrift.apache.org/) to encode the schema and other\nmetadata, but the actual data does not use thrift.\n\nContributions\n-------------\nPlease make sure you sign the [contributor license agreement](https://github.com/ironSource/cla) in order for us to be able to accept your contribution. We thank you very much!\n\n\nLicense\n-------\n\nCopyright (c) 2017 ironSource Ltd.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in the\nSoftware without restriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\nSoftware, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n","maintainers":[{"email":"it@ironsrc.com","name":"it-ironsrc"},{"email":"yanivk@gmail.com","name":"kessler"}],"time":{"modified":"2022-09-23T21:41:33.219Z","created":"2017-10-17T16:06:22.867Z","0.2.0":"2017-10-17T16:06:22.867Z","0.7.0":"2017-10-17T18:06:31.595Z","0.10.0":"2018-11-01T20:02:59.860Z","0.10.1":"2019-01-16T11:48:19.293Z","0.11.0":"2019-10-02T12:34:17.829Z","0.11.1":"2019-10-03T02:13:34.309Z","0.11.2":"2019-10-03T02:21:19.986Z"},"homepage":"https://github.com/ironSource/parquetjs","keywords":["dremel","parquet"],"repository":{"type":"git","url":"git://github.com/ironSource/parquetjs.git"},"author":{"name":"ironSource","email":"npm@ironsrc.com"},"bugs":{"url":"https://github.com/ironSource/parquetjs/issues"},"license":"MIT","readmeFilename":"README.md"}